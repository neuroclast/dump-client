import { Injectable } from "@angular/core";
import {HttpHeaders} from "@angular/common/http";


@Injectable()
export class Globals {
  public httpOptions = {
    headers: new HttpHeaders({ 'Content-Type': 'application/json' })
  };

  public dumpTypeMap  = {
    "None": "nohighlight",
    "Apache": "apache",
    "Basic": "basic",
    "Bash": "bash",
    "C#": "cs",
    "C++": "cpp",
    "CSS": "css",
    "CoffeeScript": "coffeescript",
    "Diff": "diff",
    "Dockerfile": "dockerfile",
    "DOS .bat": "dos",
    "Elixir": "elixir",
    "Erlang": "erlang",
    "Excel": "excel",
    "Fortran": "fortran",
    "Groovy": "groovy",
    "HTML / XML": "xml",
    "HTTP": "http",
    "Ini": "ini",
    "JSON": "json",
    "Java": "java",
    "JavaScript": "javascript",
    "Makefile": "makefile",
    "Markdown": "markdown",
    "Nginx": "nginx",
    "Objective-C": "objectivec",
    "PHP": "php",
    "Perl": "perl",
    "PowerShell": "powershell",
    "Python": "python",
    "Ruby": "ruby",
    "Shell Session": "shell",
    "SQL": "sql",
    "Tcl": "tcl",
    "TypeScript": "typescript",
    "VBScript": "vbscript",
  };

  public invertedDumpTypeMap  = {
    "nohighlight": "None",
    "apache": "Apache",
    "basic": "Basic",
    "bash": "Bash",
    "cs": "C#",
    "cpp": "C++",
    "css": "CSS",
    "coffeescript": "CoffeeScript",
    "diff": "Diff",
    "dockerfile": "Dockerfile",
    "dos": "DOS .bat",
    "elixir": "Elixir",
    "erlang": "Erlang",
    "excel": "Excel",
    "fortran": "Fortran",
    "groovy": "Groovy",
    "xml": "HTML / XML",
    "http": "HTTP",
    "ini": "Ini",
    "json": "JSON",
    "java": "Java",
    "javascript": "JavaScript",
    "makefile": "Makefile",
    "markdown": "Markdown",
    "nginx": "Nginx",
    "objectivec": "Objective-C",
    "php": "PHP",
    "perl": "Perl",
    "powershell": "PowerShell",
    "python": "Python",
    "ruby": "Ruby",
    "shell": "Shell Session",
    "sql": "SQL",
    "tcl": "Tcl",
    "typescript": "TypeScript",
    "vbscript": "VBScript",
  };
}
